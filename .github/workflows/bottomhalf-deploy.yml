# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular application with Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.16.0]
        build-config: [production]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build -- --configuration ${{ matrix.build-config }}

    # Build and create docker
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6      
      with:
        image: bottomhalflimited/conf.app.web
        tags: dev-2509
        registry: docker.io
        dockerfile: Dockerfile
        buildArgs: BUILD_CONFIG=${{ matrix.build-config }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}    

    # Perform deployment
    - name: SSH to Remote server and deploy
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

    - name: Apply new changes
      run: |
          echo "Deleting existing Kubernetes resources"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "microk8s kubectl delete -f /root/kube.ws/conference/webapp/conf-web-deploy.yml"

          echo "Applying new Kubernetes configuration"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "microk8s kubectl apply -f /root/kube.ws/conference/webapp/conf-web-deploy.yml"

    - name: cleanup
      run: |
        echo "Cleaning up SSH credentials"
        rm -rf ~/.ssh